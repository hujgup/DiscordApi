<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
using System;
using System.Threading;
using System.Diagnostics;
using System.Runtime.CompilerServices;

namespace Echo.Discord.Api {
	public partial class DiscordEnvironment {
<# for (int count = 1; count <= 2; count++) { #>
<# for (int pts = 0; pts <= 1; pts++) { #>
		public static Thread CreateSubthread(<#= pts == 0 ? "Parameterized" : "" #>ThreadStart start<# if (count > 1) { #>, int maxStackSize<# } #>) {
			DiscordEnvironment env = Current;
			return new Thread(<#= pts == 0 ? "arg" : "()" #> => {
				DiscordDebug.WriteLine("Starting environment thread...", env?.AppName);
				try {
					if (env != null) {
						env.Run(() => {
							start(<#= pts == 0 ? "arg" : "" #>);
						});
					} else {
						start(<#= pts == 0 ? "arg" : "" #>);
					}
				} catch (Exception e) {
					DiscordDebug.WriteLine(e.ToString());
				} finally {
					DiscordDebug.WriteLine("Environment thread done.", env?.AppName);
				}
			}<# if (count > 1) { #>, maxStackSize<# } #>);
		}
<# } #>
<# } #>
	}
}